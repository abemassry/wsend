#!/bin/bash
#
# Copyright 2013 Abraham Massry
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
#

curl_installed=`curl --version 2>&1`
protocol='http'
site='dev-tw.massindustries.org'
port='8000'
page='/upload'
if [ "$port" ]; then
  host=$protocol'://'$site':'$port
else
  host=$protocol'://'$site
fi
freeSpaceK=`df -k $HOME | tail -n 1 | head -n 1 | awk '{print $4}'`
if [ "$curl_installed" ]; then
  #continue
else
  echoerr "curl is required but it is not installed. Aborting";
  echoerr "For ubuntu please run: sudo apt-get install curl";
  exit 1;
fi
# check to see if directory exists
if [ -d "$HOME/.wsend" ]; then
  wsend_dir="$HOME/.wsend"
else
  # if not, install
  if [ "$freeSpaceK" -gt 100 ]; then
    mkdir $HOME/.wsend
    #download wsend and put it in directory
    curl -o $HOME/.wsend/wsend https://raw.github.com/abemassry/wsend/master/wsend
    chmod +x $HOME/.wsend/wsend
    #supporting files as well
    curl -o $HOME/.wsend/README.md https://raw.github.com/abemassry/wsend/master/README.md
    curl -o $HOME/.wsend/COPYING https://raw.github.com/abemassry/wsend/master/COPYING
  else
    echoerr "not enough free space to continue. Aborting";
    exit 1;
  fi
  #add alias to shell
  #execute alias command
  if [ $SHELL = "/bin/bash" ]; then
    bashInstall
  elif [ $SHELL = "/bin/csh" ]; then
    cshInstall
  elif [ $SHELL = "/bin/tcsh" ]; then
    cshInstall
  elif [ $SHELL = "/bin/ksh" ]; then
    kshInstall
  elif [ $SHELL = "/bin/zsh" ]; then
    zshInstall
  fi # install done
fi # check for installation done
#check to see if user is registered
if [ -e "$HOME/.wsend/.id" ]; then
  id=`cat $HOME/.wsend/.id`
  #ask server for account type
  if [ $user_type == 'free' ]; then
    freeInfoMessage
  elif [ $user_type == 'unregistered' ]; then
    registerInfoMessage
  elif [ $user_type == 'unknown' ]; then
    unregisteredSignUp
  fi
fi

if [ $1 == '--register' ]; then
  register
fi

if [ $1 == '--login' ]; then
  login
fi

function bashInstall () {
 if [ -e "$HOME/.bashrc" ]; then
   als_set=`grep "alias wsend=" $HOME/.bashrc`
   if [ "$als_set" ]; then
     #do nothing
   else
     echo "alias wsend='$HOME/.wsend/wsend'" >> $HOME/.bashrc
     alias wsend="$HOME/.wsend/wsend"
   fi
 else
   echo "alias wsend='$HOME/.wsend/wsend'" >> $HOME/.bashrc
   alias wsend="$HOME/.wsend/wsend"  
 fi
}

function cshInstall () {
 if [ -e "$HOME/.cshrc" ]; then
   als_set=`grep "alias wsend " $HOME/.cshrc`
   if [ "$als_set" ]; then
     #do nothing
   else
     echo "alias wsend '$HOME/.wsend/wsend'" >> $HOME/.cshrc
     alias wsend "$HOME/.wsend/wsend"
   fi
 else
   echo "alias wsend '$HOME/.wsend/wsend'" >> $HOME/.cshrc
   alias wsend "$HOME/.wsend/wsend"  
 fi
}

function kshInstall () {
 if [ -e "$HOME/.kshrc" ]; then
   als_set=`grep "alias wsend=" $HOME/.kshrc`
   if [ "$als_set" ]; then
     #do nothing
   else
     echo "alias wsend='$HOME/.wsend/wsend'" >> $HOME/.kshrc
     alias wsend="$HOME/.wsend/wsend"
   fi
 else
   echo "alias wsend='$HOME/.wsend/wsend'" >> $HOME/.kshrc
   alias wsend="$HOME/.wsend/wsend"  
 fi
}

function zshInstall () {
 if [ -e "$HOME/.zshrc" ]; then
   als_set=`grep "alias wsend=" $HOME/.zshrc`
   if [ "$als_set" ]; then
     #do nothing
   else
     alias -g wsend="$HOME/.wsend/wsend" >> $HOME/.zshrc
     alias -g wsend="$HOME/.wsend/wsend"
   fi
 else
   alias -g wsend="$HOME/.wsend/wsend" >> $HOME/.zshrc
   alias -g wsend="$HOME/.wsend/wsend"  
 fi
}


function registerInfoMessage () {
  echoerr -e "\e[01;36m"
  echoerr "info:  It appears you aren't registered"
  echoerr "info:  Registration is free and comes with 2GB of storage space"
  echoerr "info:  Plus get 1G of space for every friend you refer"
  echoerr "info:  Sign up now with: wsend --register"
  echoerr "info:  unregistered accounts are limited to 200MB"
  echoerr "info:  your unregistered transfer will now continue"
  echoerr -e "\e[00m"
}

function freeInfoMessage () {
  echoerr -e "\e[01;36m"
  echoerr "info:  free accounts are limited to 2GB files"
  echoerr "info:  for more space refer friends with: "
  echoerr "info:  wsend --refer friend@example.com"
  echoerr "info:  your free transfer will now continue"
  echoerr -e "\e[00m"
}

echoerr() { 
  echo "$@" 1>&2; 
}

function unregisteredSignUp () {
  echoerr -e "\e[01;36m"
  echoerr "info:  creating unregistered account"
  echoerr "info:  Registration is free and comes with 2GB of storage space"
  echoerr "info:  Plus get 1G of space for every friend you refer"
  echoerr "info:  Sign up now with: wsend --register"
  echoerr "info:  unregistered accounts are limited to 200MB"
  echoerr "info:  your unregistered transfer will now continue"
  echoerr -e "\e[00m"
  curlOutSignUp=''
  id=`curl -F start=1 $host/createunreg > >(tee $curlOutSignUp) 2> >(tee /dev/null >&2)`
  echo "$id" > $HOME/.wsend/.id
}

function register() {
  echoerr -e "\e[01;36m"
  echoerr "info:  enter email and password to register"
  echoerr -e "\e[00m"
  read -p "email: " entered_email
  stty -echo
  read -p "Password: " passw; echo
  stty echo
  uidFromFile=`cat $HOME/.wsend/.id`
  registrationMessage=`curl -F uid=$uidFromFile;email=$entered_email;password=$passw $host/register_cli > >(tee /dev/null) 2> >(tee /dev/null >&2)`
  echoerr -e "\e[01;36m"
  echoerr "info:  message from server:"
  echoerr "info:  $registrationMessage"
  echoerr -e "\e[00m"
}

function login() {
  echoerr -e "\e[01;36m"
  echoerr "info:  enter email and password to login"
  echoerr -e "\e[00m"
  read -p "email: " entered_email
  stty -echo
  read -p "Password: " passw; echo
  stty echo
  loggedInID=`curl -F email=$entered_email;password=$passw $host/login_cli > >(tee /dev/null) 2> >(tee /dev/null >&2)`
  if [ loggedInID ]; then
    echo "$loggedInID" > $HOME/.wsend/.id
    echoerr -e "\e[01;36m"
    echoerr "info:  logged in sucessfully"
    echoerr -e "\e[00m"
  else
    echoerr -e "\e[01;36m"
    echoerr "info:  incorrect email password combo"
    echoerr -e "\e[00m"
  fi
}
